# 워크 플로우 이름
name: Java CI with Gradle

# 워크 플로우가 언제 실행 될지를 정한다.
on:
  push:
    branches:  ["main"]

# 워크플로우에서 할 작업 정의한다.
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 깃허브에서 제공하는 checkout 엑션 사용
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Gradle 빌드 엑션을 이용해서 프로젝트 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build

      # 빌드해서 생긴 JAR 파일을 깃허브 아티팩트로 업로드
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: coreHacsickPay
          path: build/libs/*.jar

  # 배포 **
  deploy:
    needs: build
    runs-on: ubuntu-latest

    # 위의 빌드작업한 JAR 파일 = 아티팩트를 다운로드
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: coreHacsickPay
          path: build/libs/

      # EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_SSH_KEY}}
          source: "build/libs/*.jar"
          target: "/home/${{secrets.EC2_USERNAME}}/appdata"
          strip_components: 2

      - name: Restart Process
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_SSH_KEY}}
          script: |
            sh /home/${{secrets.EC2_USERNAME}}/appdata/scripts/restart.sh
